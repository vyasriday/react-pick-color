{"version":3,"sources":["components/Header/ColorPallete/Color-Item/Color-Item.js","components/Header/ColorPallete/ColorPallete.js","components/Header/CustomColorPallete/CustomColorItem/CustomColorItem.js","components/Header/CustomColorPallete/CustomColorPallete.js","components/Header/Form.js","components/Header/Header.js","components/Drawer/Drawer.js","App.js","serviceWorker.js","index.js"],"names":["ColorItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","color","setColor","bind","assertThisInitialized","changeColor","react_default","a","createElement","title","className","style","backgroundColor","onClick","Component","ColorPallete","colorArray","changeParentColor","newColor","_this2","map","key","Color_Item_Color_Item","CustomColorItem","_React$Component","customColor","isAvailable","index","removeColorItem","inherits","createClass","value","setState","removeColorFromCustomArray","React","CustomColorPallete","customColorArray","push","CustomColorItem_CustomColorItem_CustomColorItem","Form","_Component","_getPrototypeOf2","_len","arguments","length","args","Array","_key","apply","concat","e","target","submit","preventDefault","addNewColor","removeForm","onSubmit","type","onChange","Header","formVisible","addFormComponent","removeFormComponent","console","log","customArray","filter","el","i","Header_ColorPallete_ColorPallete","CustomColorPallete_CustomColorPallete_CustomColorPallete","id","Form_Form","Drawer","drawerColor","App","changeDrawerColor","components_Header_Header","components_Drawer_Drawer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c46ca601.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport './Color-Item.css';\n\nclass ColorItem extends Component { \n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: props.color\n    } \n    this.setColor = this.setColor.bind(this);\n  }\n\n  setColor() {\n    this.props.changeColor(this.state.color);\n  }\n   render() {\n     return(\n       <div>\n         <span title=\"click to change drawer color\" className=\"color-item\" style={{backgroundColor: this.state.color}} onClick={this.setColor}></span>\n      </div>\n     )\n   }\n    \n  \n} \n\nexport default ColorItem;","import React, {Component} from 'react';\nimport './ColorPallete.css';\nimport ColorItem from './Color-Item/Color-Item';\n\nclass ColorPallete extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.changeParentColor = this.changeParentColor.bind(this);\n  }\n\n  colorArray = ['#FF7F00', '#00FF00', '#AAFFCC', '#0022EE'];\n  changeParentColor(newColor) {\n    this.props.changeColor(newColor);\n  }\n  render() {\n    return(\n      <div className=\"colorPallete\">\n      {this.colorArray.map((color, key) => <ColorItem  color= {color} key={key} changeColor = {this.changeParentColor} />\n      )}\n      </div>\n    )\n  }\n}\n\nexport default ColorPallete;","import React from 'react';\nimport './CustomColorItem.css';\n\nexport class CustomColorItem extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: this.props.customColor,\n      isAvailable: true,\n      index: props.index\n    }\n    this.removeColorItem = this.removeColorItem.bind(this);\n  }\n\n\n  removeColorItem() {\n    this.setState({\n      isAvailable : false\n    })\n    // remove it from customColorArray in header using index of item\n    this.props.removeColorFromCustomArray(this.state.index)\n  }\n\n  render() {\n    return(\n      this.state.isAvailable?\n        <div className=\"dynamic-color-item-space\">\n        <span onClick={this.removeColorItem}><i className=\"fas fa-times\"></i></span>\n        <span title=\"click to change drawer color\" className=\"custom-color-item\" style={{backgroundColor: this.state.color}}></span> \n      </div>: ''\n      \n      \n    )\n  }\n}","import React from 'react';\nimport {CustomColorItem}  from './CustomColorItem/CustomColorItem';\nimport './CustomColorPallete.css';\n\nexport class CustomColorPallete extends React.Component {\n  \n  constructor(props) {\n    super();\n    this.removeColorFromCustomArray= this.removeColorFromCustomArray.bind(this);\n   \n  }\n\n  removeColorFromCustomArray(index) {\n    this.props.removeColorFromCustomArray(index);\n  }\n\n  addNewColorToArray() {\n    this.setState({\n      customColorArray: this.state.customColorArray.push(this.props.newColor)\n    })\n  }\n\n  render() {\n    const {customColorArray} = this.props;\n    return(\n      <div className=\"customColorPallete\">\n      {customColorArray.map((customColor, index) => <CustomColorItem \n        customColor = {customColor}\n        key={index} \n        index= {index}\n        removeColorFromCustomArray={this.removeColorFromCustomArray}  \n      /> )}\n      </div>\n    )\n  }\n}","import React, {Component} from 'react';\nimport './Form.css';\n\nexport class Form extends Component {\n\n  state = {value: ''}\n\n  setColor = e => {\n    this.setState({value: e.target.value});\n  }\n  \n  submit = e => {\n    e.preventDefault();\n    this.props.addNewColor(this.state.value)\n    this.props.removeForm();\n  }\n\n  render() {\n    return (\n      <div>\n        <form onSubmit={this.submit}>\n            <label>\n              <input \n                type=\"color\" \n                onChange = {this.setColor} />\n            </label>\n            <button>Submit</button>\n        </form>\n      </div>\n    )\n  }\n}\n\n","import React, {Component} from 'react';\nimport './Header.css';\nimport ColorPallete from './ColorPallete/ColorPallete';\nimport { CustomColorPallete } from './CustomColorPallete/CustomColorPallete';\nimport {Form} from './Form';\nclass Header extends Component {\n  \n  constructor(props) {\n    super(props);\n    this.state ={\n      formVisible: false,\n      customColorArray: []\n    }\n    this.changeParentColor = this.changeParentColor.bind(this);\n    this.addFormComponent = this.addFormComponent.bind(this);\n    this.removeFormComponent = this.removeFormComponent.bind(this);\n    this.addNewColor = this.addNewColor.bind(this);\n    this.removeColorFromCustomArray = this.removeColorFromCustomArray.bind(this);\n  }\n\n  changeParentColor(newColor) {\n    this.props.changeColor(newColor);\n  }\n\n  addFormComponent() {\n    this.setState({\n      formVisible: true,\n      newColor: ''\n    })\n  }\n\n  removeFormComponent() {\n    this.setState({\n      formVisible: false\n    })\n  }\n\n  addNewColor(color) {\n    console.log(color);\n    this.setState({\n      newColor: color\n    })\n  }\n\n  removeColorFromCustomArray(index) {\n    let customArray = this.state.customColorArray.filter((el, i) => i !== index);\n    this.setState({\n      customColorArray: customArray\n    });\n    console.log('Custom Array', customArray);\n  }\n\n  render() {\n    return(\n      <div className=\"header\">\n        <ColorPallete changeColor={this.changeParentColor} />\n        <CustomColorPallete \n          newColor={this.state.newColor} \n          customColorArray={this.state.customColorArray}\n          removeColorFromCustomArray = {this.removeColorFromCustomArray}  \n        />\n        <span id=\"plus-icon\" onClick={this.addFormComponent}><i className=\"fas fa-plus\"></i> </span>\n        {this.state.formVisible? <Form  removeForm={this.removeFormComponent} addNewColor = {this.addNewColor}/> : ''}\n        \n      </div>\n\n    )\n  }\n}\n\nexport default Header;","import React, {Component} from 'react';\nimport './Drawer.css';\n\nclass Drawer extends Component {\n  render() {\n    return(\n      <section className=\"drawer\" style={{backgroundColor: this.props.drawerColor }}>\n        <h2>Color Drawer</h2>\n      </section>\n\n    )\n  }\n}\n\nexport default Drawer;\n","import React, { Component } from 'react';\nimport Header from './components/Header/Header';\nimport Drawer from './components/Drawer/Drawer';\nimport './App.css';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        color: 'orangered'\n    }\n    this.changeDrawerColor = this.changeDrawerColor.bind(this);\n  }\n   changeDrawerColor(newColor) {\n     this.setState({\n       color: newColor\n     })\n   } \n\n  render() {\n    return (\n      <div className=\"wrapper\">\n       <Header changeColor= {this.changeDrawerColor}/>\n       <Drawer \n        drawerColor = {this.state.color} />\n      </div>\n    );\n  }\n} \n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}